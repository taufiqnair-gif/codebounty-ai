import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from "@/components/ui/table"
import { Badge } from "@/components/ui/badge"
import type { Vulnerability } from "@/types/audit"

interface VulnerabilityTableProps {
  vulnerabilities: Vulnerability[]
}

export function VulnerabilityTable({ vulnerabilities }: VulnerabilityTableProps) {
  const getSeverityBadge = (severity: string) => {
    switch (severity) {
      case "High":
        return <Badge className="bg-red-500/20 text-red-500 border-red-500">High</Badge>
      case "Medium":
        return <Badge className="bg-yellow-500/20 text-yellow-500 border-yellow-500">Medium</Badge>
      case "Low":
        return <Badge className="bg-green-500/20 text-green-500 border-green-500">Low</Badge>
      default:
        return <Badge variant="outline">{severity}</Badge>
    }
  }

  return (
    <Table>
      <TableHeader>
        <TableRow>
          <TableHead className="w-[150px] text-primary">Type</TableHead>
          <TableHead className="w-[100px] text-primary">Severity</TableHead>
          <TableHead className="text-primary">Description</TableHead>
          <TableHead className="w-[80px] text-primary">Line</TableHead>
        </TableRow>
      </TableHeader>
      <TableBody>
        {vulnerabilities.length === 0 ? (
          <TableRow>
            <TableCell colSpan={4} className="h-24 text-center text-muted-foreground">
              No vulnerabilities detected.
            </TableCell>
          </TableRow>
        ) : (
          vulnerabilities.map((vuln, index) => (
            <TableRow key={index}>
              <TableCell className="font-medium text-foreground">{vuln.type}</TableCell>
              <TableCell>{getSeverityBadge(vuln.severity)}</TableCell>
              <TableCell className="text-muted-foreground">{vuln.description}</TableCell>
              <TableCell className="text-muted-foreground">{vuln.line > 0 ? vuln.line : "N/A"}</TableCell>
            </TableRow>
          ))
        )}
      </TableBody>
    </Table>
  )
}
